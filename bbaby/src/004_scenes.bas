' SCENES

6000 ' 
6010 ' CENARIO
6020 '
6030 ' MONTA O CHAO: CHAR$("-")
6040 FOR F = 0 TO 20: LOCATE 0, F: PRINT STRING$(32,32): NEXT F:' Z1 = 3: Z2 = Z1 + 6: Z3 = Z2 + 6: Z4 = Z3 + 6: ' VARIAVEL CHAO
6050 LOCATE 0, Z1: PRINT STRING$(32,"%"):   REM TETO
6060 LOCATE 0, Z2: PRINT STRING$(32,"_"):   REM PLATAFORMA 1
6070 LOCATE 0, Z3: PRINT STRING$(32,"_"):  REM PLATAFORMA 2
6080 LOCATE 0, Z4: PRINT STRING$(32,"_"):  REM PLATAFORMA 3
6085 IF SC = 1 THEN GOSUB 7300: RETURN
6087 IF SC = 2 THEN GOSUB 7500: RETURN
6090 '
6100 ' CENARIO 3
6110 ' MONTA A PAREDE: CHAR$("%")
6120 ' PY =  0: PX = 0: REM LINHA, COLUNA, TAMANHO
6130 PY = Z1 + 3: PX = 0: GOSUB 7150: REM PAREDE FUNDO PLATAFORMA 1
6140 PY = Z2 + 3: PX = 0: GOSUB 7150: REM PAREDE FUNDO PLATAFORMA 2
6150 PY = Z3 + 3: PX = 0: GOSUB 7150: REM PAREDE FUNDO PLATAFORMA 3 
6160 PY = Z1: PX = 30: GOSUB 7110: REM PAREDE DIREITA NA PLATAFORMA 1 
6170 PY = Z2: PX = 30: GOSUB 7110: REM PAREDE DIREITA NA PLATAFORMA 2
6180 PY = Z3: PX = 30: GOSUB 7110: REM PAREDE DIREITA NA PLATAFORMA 3
6190 PY = Z1: PX =  8: GOSUB 7110:
6200 PY = Z2: PX =  4: GOSUB 7110:
6210 ' MONTA A ESCADA: CHAR$("no")
6220 PY = Z2: PX =  6: GOSUB 7130: REM ESCADA
6230 PY = Z2: PX = 18: GOSUB 7130: REM ESCADA
6240 PY = Z3: PX = 26: GOSUB 7130: REM ESCADA
6250 PY = 0: PX = 0: GOSUB 7220: REM LUSTRE
6260 PY = Z1 + 3: PX = 5: GOSUB 7270: REM JANELA 
6270 PY = Z1 + 3: PX = 13: GOSUB 7270: REM JANELA 
6280 PY = Z3 + 3: PX = 6: GOSUB 7280: REM JANELA 
6290 SC = 3
7000 RETURN

7100 ' PAREDE
7110 FOR F = 0 TO 5: LOCATE PX, F + PY: PRINT "%%": NEXT F: RETURN

7120 ' ESCADA
7130 FOR F = 0 TO 5: LOCATE PX, F + PY: PRINT "no": NEXT F: RETURN

7140 ' PAREDE FUNDO
7150 FOR F = 0 TO 26 STEP 5
7160    LOCATE PX + F, PY + 0: PRINT "efghm"
7170    LOCATE PX + F, PY + 1: PRINT "jkleg"
7180    LOCATE PX + F, PY + 2: PRINT "ihmjl"
7190 NEXT F
7200 RETURN

7210 ' LUSTRE
7220 LOCATE  3, Z1 + 1: PRINT "@#": LOCATE 19, Z1 + 1: PRINT "@#"
7230 LOCATE 14, Z2 + 1: PRINT "@#": LOCATE 25, Z2 + 1: PRINT "@#"
7240 LOCATE  3, Z3 + 1: PRINT "@#": LOCATE 20, Z3 + 1: PRINT "@#"
7250 RETURN

7255 LOCATE PX, PY: PRINT "@#": RETURN

7260 ' JANELA pq rs
7270 LOCATE PX, PY: PRINT "pq": LOCATE PX, PY + 1: PRINT "rs": LOCATE PX, PY + 2: PRINT "hm": RETURN
7280 LOCATE PX, PY: PRINT "gpq": LOCATE PX, PY + 1: PRINT "lrs": LOCATE PX, PY + 2: PRINT "ihm": RETURN

7300 ' CENARIO 1
7310 ' MONTA A PAREDE: CHAR$("%")
7320 ' PY =  0: PX = 0: REM LINHA, COLUNA, TAMANHO
7330 PY = Z1 + 3: PX = 2: GOSUB 7150: REM PAREDE FUNDO PLATAFORMA 1
7340 PY = Z2 + 3: PX = 2: GOSUB 7150: REM PAREDE FUNDO PLATAFORMA 2
7350 PY = Z3 + 3: PX = 2: GOSUB 7150: REM PAREDE FUNDO PLATAFORMA 3 
7360 PY = Z1: PX = 0: GOSUB 7110: REM PAREDE ESQUERDA NA PLATAFORMA 1 
7370 PY = Z2: PX = 0: GOSUB 7110: REM PAREDE ESQUERDA NA PLATAFORMA 2
7380 PY = Z3: PX = 0: GOSUB 7110: REM PAREDE ESQUERDA NA PLATAFORMA 3
7390 PY = Z2: PX = 14: GOSUB 7110:
7400 PY = Z3: PX = 19: GOSUB 7110:
7410 ' MONTA A ESCADA: CHAR$("no")
7420 PY = Z2: PX = 3: GOSUB 7130: REM ESCADA
7430 PY = Z3: PX = 7: GOSUB 7130: REM ESCADA
7440 PY = Z3: PX = 16: GOSUB 7130: REM ESCADA
7450 PY = Z1 + 1: PX = 8: GOSUB 7255: REM LUSTRE
7460 PY = Z2 + 1: PX = 8: GOSUB 7255: REM LUSTRE
7465 PY = Z3 + 1: PX = 11: GOSUB 7255: REM LUSTRE
7470 'PY = Z1 + 3: PX = 13: GOSUB 7270: REM JANELA 
7480 SC = 1: 'PY = Z3 + 3: PX = 6: GOSUB 7280: REM JANELA 
7490 RETURN 

7500 ' CENARIO 2
7510 ' MONTA A PAREDE: CHAR$("%")
7520 ' PY =  0: PX = 0: REM LINHA, COLUNA, TAMANHO
7530 PY = Z1 + 3: PX = 2: GOSUB 7150: REM PAREDE FUNDO PLATAFORMA 1
7540 PY = Z2 + 3: PX = 0: GOSUB 7150: REM PAREDE FUNDO PLATAFORMA 2
7550 PY = Z3 + 3: PX = 2: GOSUB 7150: REM PAREDE FUNDO PLATAFORMA 3 
7560 PY = Z1: PX = 8: GOSUB 7110: REM PAREDE DIREITA NA PLATAFORMA 1 
7570 PY = Z2: PX = 15: GOSUB 7110: REM PAREDE DIREITA NA PLATAFORMA 2
7580 PY = Z3: PX = 25: GOSUB 7110: REM PAREDE DIREITA NA PLATAFORMA 3
7590 PY = Z2: PX = 11: GOSUB 7130: REM ESCADA
7600 PY = Z2: PX = 19: GOSUB 7130: REM ESCADA
7610 PY = Z3: PX = 8: GOSUB 7130: REM ESCADA
7620 PY = Z1 + 1: PX = 3: GOSUB 7255: REM LUSTRE
7630 PY = Z1 + 1: PX = 19: GOSUB 7255: REM LUSTRE
7640 PY = Z2 + 1: PX = 5: GOSUB 7255: REM LUSTRE
7650 PY = Z2 + 1: PX = 25: GOSUB 7255: REM LUSTRE
7660 PY = Z3 + 1: PX = 3: GOSUB 7255: REM LUSTRE
7670 PY = Z3 + 1: PX = 15: GOSUB 7255: REM LUSTRE
7680 PY = Z1 + 3: PX = 0: GOSUB 7270: REM JANELA 
7690 PY = Z2 + 3: PX = 30: GOSUB 7270: REM JANELA 
7700 PY = Z3 + 3: PX = 0: GOSUB 7270: REM JANELA 
7705 SC = 2
7710 RETURN 

'11000 REM -- CARREGA CENARIOS
'11010 S = 49152: 'CLEAR 200,49152: REM BASE(5)
'11020 ' DEF USR = 45568: U=USR(0) : REM &HB200: U = USR(0)
'11030 READ R
'11040 IF R = -1 THEN RETURN ELSE POKE S, R: REM IF R$="*" THEN RETURN ELSE VPOKE S,VAL("&H"+R$)
'11050 S = S + 1: LOCATE 0,11: PRINT "ENDERECO: "; S - 49152; "DATA: "; R
'11060 GOTO 11030

11000 REM -- CARREGA CENARIOS
11010 S = 49248: 'CLEAR 200,49152
11015 N = 0
11020 READ R$
11030 IF R$ = "-1" THEN PRINT "TOTAL LIDO:"; N: RETURN
11035 LOCATE 0,11: PRINT "ENDERECO: "; S - 49248; "DATA: "; R$
11040 POKE S, VAL("&H" + R$)
11050 S = S + 1: N = N + 1
11060 GOTO 11020
' TELA 3
11500 'DATA 25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25 : REM  1 49248
11510 'DATA 00,00,00,00,00,00,00,00,00,25,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,25,25 : REM  2 
11520 'DATA 00,00,00,00,00,00,00,00,00,25,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,25,25 : REM  3 
11530 'DATA 00,00,00,00,00,00,00,00,00,25,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,25,25 : REM  4 
11540 'DATA 00,00,00,00,00,00,00,00,00,25,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,25,25 : REM  5 
11550 'DATA 00,00,00,00,00,00,00,00,00,25,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,25,25 : REM  6 
11560 'DATA 00,00,00,00,00,00,00,00,00,25,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,25,25 : REM  7 
11570 'DATA 5F,5F,5F,5F,5F,5F,5F,6E,6F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,25,25 : REM  8
11580 'DATA 00,00,00,00,00,00,25,6E,6F,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,25,25 : REM  9 
11590 'DATA 00,00,00,00,00,00,25,6E,6F,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,25,25 : REM 10 
11600 'DATA 00,00,00,00,00,00,25,6E,6F,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,25,25 : REM 11 
11610 'DATA 00,00,00,00,00,00,25,6E,6F,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,25,25 : REM 12 
11620 'DATA 00,00,00,00,00,00,25,6E,6F,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,25,25 : REM 13
11630 'DATA 00,00,00,00,00,00,25,6E,6F,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,25,25 : REM 14 
11640 'DATA 5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,6E,6F,5F,5F,5F,25,25 : REM 15
11650 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,6E,6F,00,00,00,25,25 : REM 16 
11660 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,6E,6F,00,00,00,25,25 : REM 17 
11670 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,6E,6F,00,00,00,25,25 : REM 18 
11680 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,6E,6F,00,00,00,25,25 : REM 19 
11690 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,6E,6F,00,00,00,25,25 : REM 20
11700 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,6E,6F,00,00,00,25,25 : REM 21 
11710 'DATA 5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,25,25 : REM 22
' TELA 2
11720 'DATA 25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25 : REM  1 49952
11730 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM  2 
11740 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM  3 
11750 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM  4 
11760 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM  5 
11770 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM  6 
11780 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM  7 
11790 'DATA 5F,5F,5F,5F,5F,5F,5F,6E,6F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F : REM  8
11800 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM  9 
11810 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM 10 
11820 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM 11 
11830 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM 12 
11840 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM 13
11850 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM 14 
11860 'DATA 5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,6E,6F,5F,5F,5F,5F,5F : REM 15
11870 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM 16 
11880 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM 17 
11890 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM 18 
11900 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM 19 
11910 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM 20
11920 'DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00 : REM 21 
11930 'DATA 5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F,5F : REM 22
11990 'DATA "-1"

'11400 RETURN
'11500 DATA 37,37,37,37,37,37,37,37,37,37,37,37,37,37
'11510 DATA 37,37,37,37,37,37,37,37,37,37,37,37,37,37
'11520 DATA 37,37,65
'11600 DATA -1

12000 ' MOSTRA CENARIO
12010 'S1 = 49248: S2 = 49952
12015 'FOR F = 0 TO 20: LOCATE 0, F: PRINT STRING$(32,32): NEXT F:   REM TETO
12020 'FOR I = 0 TO 704
12030 ''  IF PEEK(S2 + I) <> 0 THEN VPOKE BASE(5) + I, PEEK(S2 + I)
12040 'NEXT I: 'PRINT "LENDO MEMORIA"
12045 'DEF USR = &HC7C5: A=USR(0)
12050 'RETURN 

'10 SCREEN 1
'20 BASEV = BASE(5)
13030 'RESTORE 13080: PRINT "CARREGANDO PROGRAMA": RETURN
13040 'FOR I=0 TO 27: READ A$: POKE &HC7C5 + I, "&H" + A$: LOCATE 0,10: PRINT A$: NEXT I
13050 'DEFUSR=&H9000
13060 'A=USR(0)
13070 'PRINT "PROGRAMA CARREGADO.": RETURN 
13080 'DATA 33,0,192,17,0,0,1,32,0,205,92,0,201
13090 'DATA 31,40,C3,31,05,20,31,EE,02,3A,40,C3,32,05,20,23,22,0B,01,00,00,78,80,22,28,18,F5
'13080 DATA 33,0,192,17,0,24,1,32,0,205
'13090 DATA 26,144,201,197,229,213,123,211,153,122
'13100 DATA 246,64,211,153,209,225,193,126,211,152
'13110 DATA 35,11,120,177,194,39,144,201


'10 SCREEN 1
'20 CLEAR 200,40000
'30 RESTORE 1000
'40 FOR I=0 TO 12: READ A: POKE &HC7C5+I,A: NEXT I
'50 DEFUSR=&HC7C5
'60 A=USR(0)
'70 END

'1000 DATA 33,0,192,17,0,0,1,32,0,205,92,0,201


'6050 LOCATE 0, Z1: PRINT STRING$(32,"%"):   REM TETO
'6060 LOCATE 0, Z2: PRINT STRING$(32,"_"):   REM PLATAFORMA 1
'6070 LOCATE 0, Z3: PRINT STRING$(32,"_"):  REM PLATAFORMA 2
'6080 LOCATE 0, Z4: PRINT STRING$(32,"_"):  REM PLATAFORMA 3
'10 FOR I = 0 TO 31
'20 READ A
'30 POKE 45568 + I, A
'40 NEXT I
'50 FOR I = 0 TO 31
'60 VPOKE BASE(5) + I, PEEK(45568 + I)
'70 NEXT I
'80 END

'10 REM Carregar código de máquina na memória
'20 REM Endereço de destino: 49248 (0xC340)
'30 REM Código de máquina: 31 40 C3 31 05 20 31 EE 02 3A 40 C3 32 05 20 23 22 0B 01 00 00 78 80 22 28 18 F5

'40 DATA 31,40,C3,31,05,20,31,EE,02,3A,40,C3,32,05,20,23,22,0B,01,00,00,78,80,22,28,18,F5
'50 FOR I = 0 TO 27
'60  READ B
'70  POKE 49248 + I, B
'80 NEXT I

'85 READ

'90 REM Definir a rotina USR
'100 DEFUSR 49248

'110 REM Chamar a rotina USR
'120 USR 49248